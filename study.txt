함수
	선언
		function 함수이름(매개변수 [=기본값] {
			...
		}

		기본값으로 함수를 호출 가능		

	호출
		함수이름(인수)
		* 인수가 없으면 undefined 할당
		* 인수로 undefined 할당시 기본 값 할당
	
	반환값
		return 이 없거나 return 만 있을 경우 undefined 반롼
		자바스크립트는 return 문 끝에 세미콜론을 자동으로 삽입
		(return 과 값 사이에 줄 삽입 X -> 괄호 사용 O)
	

	* 함수는 값으로 취급 -> 함수 이름을 alert의 인수로 할당할 경우 해당 함수의 소스 코드가 출력
	
	* let 변수 = 함수 이름; => 함수 복사
	* let 변수 = 함수 이름(); => 함수 반환값 할당

콜백 함수
	함수를 값처럼 전달
	함수를 함수의 인수로 전달하여 그 함수를 나중에 호출(called back)

익명 함수
	function() { ... ; }

화살표 함수
	function() -> () => { ... }
	(function 생략) 

-------------------------------------------

디버깅
	debugger; => breakpoint 설정
	( 또는 chrome 개발자도구 source 탭 활용 )


----------------------------------------------------------------

테스트 자동화

	BDD(Behavior Driven Development) : 테스트, 문서, 예시를 한데 모아놓은 개념

		describe( "함수이름", function() {
			it("유스케이스 설명", function(){
				assert.equal(함수이름(인수), value2) -> 함수 반환값과 value2가 같으면 에러 없이 실행
			});
		}

		* describe 는 중첩하여 사용가능		
		* it.only() 사용하면 해당 블록만 테스트		

		before ( ) : 테스트 시작 전 괄호 안 내용 실행
		after ( ) :
		
		beforeEach ( ) : 매 it이 실행전 실행
		afterEach ( ) :

	Mocha : 테스트 프레임워크(describe, it 등 테스팅 함수 제공)
	Chai : 다양한 assertion 제공
	Sinon : 함수의 정보 제공

---------------------------------------------------------------------

바벨 :  트랜스파일러 ( 모던 자바스크립트를 구 표준을 준수하는 코드로 변환 )
	
	* Webpack 은 자동으로 트랜스파일러 동작

폴리필 :  브라우저가 지원하지 않는 자바스크립트 코드를 지원 가능하도록 변환한 스크립트
	- core js
	- polyfill.io